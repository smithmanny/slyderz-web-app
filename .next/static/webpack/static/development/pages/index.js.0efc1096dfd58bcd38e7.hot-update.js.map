{"version":3,"file":"static/webpack/static/development/pages/index.js.0efc1096dfd58bcd38e7.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Modal from '@material-ui/core/Modal';\nimport SignUpForm from './form/SignUpForm';\n\nconst useStyles = theme => ({\n  main: {\n    padding: '40px 24px',\n    maxWidth: 1032,\n    margin: 'auto',\n  },\n  menuItem: {\n    marginLeft: theme.spacing.unit * 3,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  modal: {\n    position: 'absolute',\n    minWidth: theme.spacing.unit * 50,\n    maxWidth: 960,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst Layout = ({ children, classes }) => {\n  const [user, setUser] = useState(false);\n  const [signUpModal, openSignUpModal] = useState(false);\n\n  const handleClose = () => openSignUpModal(false);\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Slyderz\n            </Typography>\n\n            {!user && (\n              <React.Fragment>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.menuItem}\n                  onClick={() => openSignUpModal(true)}\n                >\n                  Sign Up\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" className={classes.menuItem}>\n                  Log In\n                </Button>\n              </React.Fragment>\n            )}\n\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={signUpModal}\n              onClose={handleClose}\n            >\n              <div style={getModalStyle()} className={classes.modal}>\n                <SignUpForm handleClose={handleClose} />\n              </div>\n            </Modal>\n\n            {user && (\n              <IconButton color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n      <main className={classes.main}>{children}</main>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withStyles(useStyles)(Layout);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAfA;AAAA;AACA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}