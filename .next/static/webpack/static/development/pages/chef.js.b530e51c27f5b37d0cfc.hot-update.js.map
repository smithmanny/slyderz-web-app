{"version":3,"file":"static/webpack/static/development/pages/chef.js.b530e51c27f5b37d0cfc.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport SignInForm from './form/SignInForm';\nimport SignUpForm from './form/SignUpForm';\nimport BasicModal from './BasicModal';\n\nconst useStyles = theme => ({\n  main: {\n    padding: '40px 24px',\n    maxWidth: 1032,\n    margin: 'auto',\n  },\n  menuItem: {\n    marginLeft: theme.spacing.unit * 3,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst Layout = ({ children, classes }) => {\n  const [user, setUser] = useState(false);\n  const [values, setValues] = useState({\n    openAuthModal: false,\n    modalView: 'log_in',\n  });\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Slyderz\n            </Typography>\n\n            {!user && (\n              <React.Fragment>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.menuItem}\n                  onClick={() => setValues({ ...values, openAuthModal: true, modalView: 'sign_up' })}\n                >\n                  Sign Up\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.menuItem}\n                  onClick={() => setValues({ ...values, openAuthModal: true, modalView: 'log_in' })}\n                >\n                  Log In\n                </Button>\n              </React.Fragment>\n            )}\n\n            <BasicModal open={values.openAuthModal} onClose={() => setValues({ ...values, openAuthModal: false })}>\n              {values.modalView === 'log_in' ? (\n                <SignInForm\n                  handleClose={() => setValues({ ...values, openAuthModal: false })}\n                  openSignUpModal={() => setValues({ ...values, modalView: 'sign_up' })}\n                />\n              ) : (\n                <SignUpForm\n                  handleClose={() => setValues({ ...values, openAuthModal: false })}\n                  openSignInModal={() => setValues({ ...values, modalView: 'log_in' })}\n                />\n              )}\n            </BasicModal>\n\n            {user && (\n              <IconButton color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n      <main className={classes.main}>{children}</main>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withStyles(useStyles)(Layout);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAZA;AAAA;AACA;AAgBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}