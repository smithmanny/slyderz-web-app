{"version":3,"file":"static/webpack/static/development/pages/index.js.7b981f55a4e92a44c986.hot-update.js","sources":["webpack:///./components/Foods.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nconst styles = theme => ({\n  orderWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: theme.spacing.unit * 5,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n});\n\nexport const allFoodsQuery = gql`\n  query {\n    foods {\n      title\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst Foods = ({ classes }) => (\n  <div className={classes.orderWrapper}>\n    <Query query={allFoodsQuery}>\n      {({ loading, error, data }) => {\n        if (loading) return <div>Loading...</div>;\n        if (error) return <div>Error :(</div>;\n\n        return (\n          <GridList className={classes.gridList} cols={3} spacing={16}>\n            {data.foods.map(food => (\n              <GridListTile key={food.title}>\n                <img src={`/api/${food.image.url}`} alt={food.title} />\n                <GridListTileBar\n                  title={food.title}\n                  classes={{\n                    root: classes.titleBar,\n                  }}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        );\n      }}\n    </Query>\n  </div>\n);\n\nFoods.propTypes = {\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withStyles(styles)(Foods);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAbA;AAAA;AACA;AAiBA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAtBA;AACA;AA0BA;AACA;AADA;AAIA;;;;A","sourceRoot":""}