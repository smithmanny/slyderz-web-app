{"version":3,"file":"static/webpack/static/development/pages/index.js.898ed4616ddedc78cc1f.hot-update.js","sources":["webpack:///./components/form/SignUpForm.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport EmailIcon from '@material-ui/icons/AlternateEmail';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { endianness } from 'os';\n\nconst useStyles = theme => ({\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  main: {\n    padding: '40px 24px',\n    maxWidth: 1032,\n    margin: 'auto',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nconst SignUpForm = ({ classes }) => {\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" id=\"modal-title\" gutterBottom>\n        Sign Up\n      </Typography>\n      <Formik\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ values, errors, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={6}>\n                <Paper className={classes.root} elevation={1}>\n                  <IconButton className={classes.iconButton} aria-label=\"First Name\">\n                    <PersonIcon />\n                  </IconButton>\n                  <Divider className={classes.divider} />\n\n                  <InputBase\n                    className={classes.input}\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Paper className={classes.root} elevation={1}>\n                  <IconButton className={classes.iconButton} aria-label=\"Last Name\">\n                    <PersonIcon />\n                  </IconButton>\n                  <Divider className={classes.divider} />\n\n                  <InputBase\n                    className={classes.input}\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12}>\n                <Paper className={classes.root} elevation={1}>\n                  <IconButton className={classes.iconButton} aria-label=\"Email\">\n                    <EmailIcon />\n                  </IconButton>\n                  <Divider className={classes.divider} />\n\n                  <InputBase\n                    className={classes.input}\n                    placeholder=\"Email\"\n                    value={values.email}\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    type=\"email\"\n                    required\n                  />\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12}>\n                <Paper className={classes.root} elevation={1}>\n                  <IconButton className={classes.iconButton} aria-label=\"Password\">\n                    <LockIcon />\n                  </IconButton>\n                  <Divider className={classes.divider} />\n\n                  <InputBase\n                    className={classes.input}\n                    placeholder=\"Password\"\n                    value={values.password}\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type={values.showPassword ? 'text' : 'password'}\n                    required\n                  />\n                  <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </Paper>\n              </Grid>\n\n              <Grid item>\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={isSubmitting}>\n                  Sign Up\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nSignUpForm.propTypes = {\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withStyles(useStyles)(SignUpForm);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA1BA;AAAA;AACA;AAmCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArFA;AA+FA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}